{\rtf1\ansi\deff0{\fonttbl{\f0 \fswiss Helvetica;}{\f1 Courier;}}
{\colortbl;\red255\green0\blue0;\red0\green0\blue255;}
\widowctrl\hyphauto

{\pard \qc \f0 \sa180 \li0 \fi0 \b \fs36 Analysis of a Professional Journal Article\par}
{\pard \qc \f0 \sa180 \li0 \fi0  Partha Sarathi Ghosh\line Computer Engineering Department\line San Jose State University\line 1 Washington Sq, San Jose, CA 95192\par}
{\pard \ql \f0 \sa180 \li0 \fi0 \par}
{\pard \ql \f0 \sa180 \li0 \fi0 \b \fs36 Introduction\par}
{\pard \ql \f0 \sa180 \li0 \fi0 The objective of this assignment is to select a high quality technical article and review its technical content and then critique it. The key attributes of a quality technical article are, the article should be published in only in a single journal, always peer reviewed and author need not make any payment to get the article published. In the area of computer science, American Computing Machinery (ACM) and Institute of Electrical and Electronics Engineers (IEEE) are two professional organizations, well known for publishing quality and peer reviewed technical articles.\line The technical paper I selected is titled {\i The Evolution of Android Malware and Analysis Technique}\u160? has been published by ACM Computing Surveys (CSUR), Volume 49 Issue 4, February 2017 Article No. 76. The authors of this paper are\par}
{\pard \ql \f0 \sa180 \li360 \fi-360 \bullet \tx360\tab Kimberly Tam, Information Security Group, Royal Holloway, University of London,\par}
{\pard \ql \f0 \sa180 \li360 \fi-360 \bullet \tx360\tab Ali Feizollah, Nor Badrul Anuar, and Rosli Salleh, Department of Computer, System and Technology, University of Malaya,\par}
{\pard \ql \f0 \sa180 \li360 \fi-360 \bullet \tx360\tab Lorenzo Cavallaro, Information Security Group, Royal Holloway, University of London.\sa180\par}
{\pard \ql \f0 \sa180 \li0 \fi0 The technical article has been refereed, cited by 18 papers and downloaded 2832 times as of\par}
{\pard \ql \f0 \sa180 \li0 \fi0 . These facts about the paper indicates that this is a quality technical paper.\line This report is organized as follows. Opening discussion [Section\u160?[paper_discussion]] starts the technical analysis of the paper by highlighting its motivation [Section\u160?[paper_motivation]]. The next section describes the problem [Section \u160?[paper_problem]] that the authors are trying to solve, followed by the methods and techniques [Section \u160?[paper_method]] the authors are using, the scope of future work [Section \u160?[paper_scope]] and conclusion of the authors [Section \u160?[paper_conclusions]].\line In the following section [Section \u160?[critique_discussion]], I critique the content of this paper, check the relevance of the content with respect to the title of the paper [Section \u160?[critique_motivation]], review the findings of the paper [Section \u160?[critique_problem]]. In this section any unanswered questions [Section \u160?[critique_method]] detailed, followed by a look at the literature style of the technical paper [Section \u160?[critique_scope]]. The conclusion [Section\u160?[conclusions]] of this report highlights my remarks on this literature review assignment.\par}
{\pard \ql \f0 \sa180 \li0 \fi0 \b \fs36 Technical Analysis of the Paper\par}
{\pard \ql \f0 \sa180 \li0 \fi0 The authors describes proliferation of Android mobile devices in our lives and how it has become ubiquitous in our life, over a span of a decade. The author uses statistics from the year 2010 to 2015 to establish this facts by comparing Android usage with the other mobile operating systems. Next the authors establishes the context for their motivation for this technical paper. They create the scope of their research, highlighting the boundaries of research area. {\i \u8220"Unlike previous works, this article is not a general study on mobile \u8230?but instead focuses on Android-related analysis techniques systematically and in detail\u8221"}\u160?.\line The article traverses into the evolution of Android malware by creating an analogy with the malware found in the early days of the personal computers(PC), however the techniques used to develop the malware for PC is different from that of the Mobile devices due to their inherent architectural differences. The technical paper points out the threat landscape, in the domain of mobile devices, by describing the potential financial benefits for a malware programmer. The technical paper mention, that a malware programmer can earn up to $12,000 a month creating a malware. In depth traversal into Android architecture is one of the key highlights of this technical paper. The author mention once the android mobile device is infected with the malware, it sends out short message service (SMS) with the user\u8217's data. Malware could also send out personal data using TCP/IP communication. The main motivation of the perpetrator\u8217's of the malware is financial benefit.\par}
{\pard \ql \f0 \sa180 \li0 \fi0 \b \fs32 Motivation\par}
{\pard \ql \f0 \sa180 \li0 \fi0 The motivation of this technical paper is to study the current techniques, used in detecting malware in Android operating system. Malware tries to take advantages of the security holes that are present in the Android operating systems. If a malware gets detected by one of the sophisticated mechanism (static analysis, dynamic analysis, \u8230?), as described in the technical paper, the malware (creators) resort to new ways of detection evasion. One other motivation of this technical paper is to study the evasion techniques used by the malware and how their deployment could be mitigated. Since the evolution of Android operating system has been organic between 2007-2015, the evasion of malware and detection of malware are always running a race to beat each other. This creates a challenge for the researchers of this technical paper to hypothesize a solution, to detect malware in a continuously changing threat landscape.\par}
{\pard \ql \f0 \sa180 \li0 \fi0 \b \fs32 Problem Description\par}
{\pard \ql \f0 \sa180 \li0 \fi0 Android operating system has been evolving at a very rapid pace. There has been 23 major software releases \u160? of the Android operating system between 2010 and 2015. The velocity of these releases has made it difficult for security engineers to try to solve the security issues in the Android operating system. Android operating systems\u8217' meteoric rise in popularity (80% of mobile devices were running malware in 2011), has been one of the primary reason for the proliferation of the malware.\line Android operating system is based on Linux Kernel with Java programming language being the application development frame work. The key security issue in the architecture has been the permission infrastructure provided by the Android application framework. Java byte code has its inherent security issues in Java Virtual Machine (JVM), Java class libraries and associated libraries in the Android framework. This paper identifies that the permission infrastructure as the weak point in the Android architecture. The paper tries to pivot on this architectural issues and tries to devise different malware analysis and detection methods.\par}
{\pard \ql \f0 \sa180 \li0 \fi0 \b \fs32 Methods and Apparatus used\par}
{\pard \ql \f0 \sa180 \li0 \fi0 In the Taxonomy of Mobile Malware Analysis \u160? section in the technical paper details the ineffectiveness of malware detection, using binary signature analysis. The malware could evade detection by rearranging the text or the data section of malware binary. This creates a challenge and opportunity to the researches to look for newer techniques for malware detection. The paper looks into different techniques used in static code analysis, dynamic code analysis and a hybrid approach with great detail. For static analysis Android permission mechanism, the intent mechanism, the binary packaging layout and usage of hardware components are well researched with technical details.\line To explain the dynamic analysis method, the paper researches into the Application Programming Interface (API) and its interaction with the kernel, to build up the security hole context. Since dynamic analysis can expose the executable part of the source code (for malware analysis), the authors describes different inputs techniques, that could be used to create a graph to explore the different paths of code execution. Dynamic analysis needs to be done at different architectural layers (Application, kernel, device drivers, hardware interactions etc.), also using different run time environments.\line The number of different mobile devices that are available also complicates the problem of malware detection. So it\u8217's hard to perform the analysis of the malware in all the target (available) mobile devices. The paper proposes taking a hybrid approach where a virtual machine (VM) can be used. The VM can be simulated to operate like a real hardware with certain changes in the software.\line The paper also detail a hybrid analysis approach. This approach combines the static analysis and dynamic analysis methods along with machine learning (ML) for analysis of the malware. This method seems to be superior because it can scale to support the huge number of different hardware android operating system is supported on.\line As alternative approaches, the paper explores other techniques of identifying malware like, using network traffic analysis, code coverage of API interfaces, monitoring system calls, creation of application dependency graphs for all the applications running, information flows among the application and operating system infrastructure, inter-process communication analysis, hardware analysis and application metadata analysis. The paper also mentions that detection of malware, after malware analysis is {\i classification} problem. In situations where malware cannot be identified using binary classification, then different attributes of the malware needs to be analysed, thereby translating the analysis problem, to a multi-class {\i stochastic} problem.\line The paper also looks into the evolution of the evasion techniques used by the malware. One of the simple techniques that the malware uses is to run the application at odd hours when the users are not using the device.\par}
{\pard \ql \f0 \sa180 \li0 \fi0 \b \fs32 Scope of Future Work\par}
{\pard \ql \f0 \sa180 \li0 \fi0 The paper states that the future of the Android Malware research is in pursuing the path of hybrid approach, that uses static analysis, dynamic analysis and ML. The advances in parallel computing would allow the future researchers to follow the hybrid approach of malware analysis. The authors highlight the advantages of performing code coverage analysis on the applications using the hybrid mechanism. Code coverage method can present different branches of execution, which would help in identifying the weak links in an application. Since malware have started evading detection in virtualised environment one area of research would be to use virtualisation, to detect malware.\par}
{\pard \ql \f0 \sa180 \li0 \fi0 \b \fs32 Conclusions\par}
{\pard \ql \f0 \sa180 \li0 \fi0 The technical paper in conclusion mention that the authors studied wide range of Android malware analysis and detection frameworks. The technical paper created the context by describing the threat landscape for mobile devices, followed by the evaluation of different malware detection techniques and solutions.\par}
{\pard \ql \f0 \sa180 \li0 \fi0 \b \fs36 Critique On The Paper\par}
{\pard \ql \f0 \sa180 \li0 \fi0 The paper is a well researched one. It details the evolution of android malware from the year 2010 to 2015. The authors have been consistent with providing relevant data from this period to substantiate their arguments. In the introduction section the paper describes their effort in details. This provides an opportunity for a reader to read sections of the paper independently.\par}
{\pard \ql \f0 \sa180 \li0 \fi0 \b \fs32 Relevance of the Content\par}
{\pard \ql \f0 \sa180 \li0 \fi0 The paper describes Android architecture with a few diagrams. This is important for the reader who might not be familiar with the Android architecture. It must be noted here that though Android operating system has a Linux kernel but the application architecture is different. This is because most of the mobile devices that has Android operating system uses the ARM hardware architecture, smaller power requirements, different storage hardware etc.\line The usage of tables to illustrate different multi variable comparison is very apt. This helps users to read the document more effectively and identify the points of differentiation with great clarity. The paper uses graphs to demonstrate single variable changes over the years for example fig 1\u160?. The explanation of the dynamic analysis and static analysis are written with great detail. Consistent style of writing have been maintained in each section of the paper. A builds up of context before highlighting the problem, analysing the problem finally reaching to a conclusion or solution.\line The paper indulge in the details of the other operating system for mobile device. I think this is redundant because the focus of the paper is on Android operating system, it was unnecessary to explain any of the other mobile operating systems as the security features of those devices are not in the scope of this research. The paper should have provided details on the VM, JIT and ART, as there are variants of implementation. VM, JIT and ART are integral part to devise any security mechanism in Android operating system.\par}
{\pard \ql \f0 \sa180 \li0 \fi0 \b \fs32 Results of the Findings\par}
{\pard \ql \f0 \sa180 \li0 \fi0 The authors research has been extensive. They have cited over 100 papers. To substantiate their argument the author have compared papers and those papers approach on malware detection. This technical paper is filled with references of statistics like growth percentage of malware year over year, usage of different mobile operating system, financial incentive of a malware etc. The paper also looks are the type of static analysis methods and dynamic analysis methods. The paper looks into different techniques of dynamic analysis. Paper concludes with empirical evidence that a hybrid approach would be the way for the future of malware analysis and detection.\par}
{\pard \ql \f0 \sa180 \li0 \fi0 \b \fs32 Unanswered Questions\par}
{\pard \ql \f0 \sa180 \li0 \fi0 One of the primary reason for the proliferation of the Android malware is the failure of app store to check for malicious application. The paper should have detailed the mechanism of application upload and application distribution in app store. A section should have been written about this in the technical paper. The paper do not describe the installation process of application in Android operating system. Detail on the tools that had been used for this research is missing. The paper do not rule out or talk about the flaws in ARM architectures which could be reason malware proliferation in Android.\par}
{\pard \ql \f0 \sa180 \li0 \fi0 \b \fs32 Writing Style\par}
{\pard \ql \f0 \sa180 \li0 \fi0 The author substantiate their arguments with relevant statistics. The authors use numerous tables to represent the data. These tables used are important tools for conveying complex data to the readers. Since the paper traverses evolution of malware with the proliferation of Android from the year 2010 to 2015, there are graphs to show progression of a single data annually, like mobile usage among people, worldwide smartphone market shares. The paper should have had separate sections describing the packaging mechanism and the android file system layout. These are key areas that opens up security holes in Android. In the diagram fig 3b\u160? the authors citations overwhelms the Venn diagram. The author could have represented the diagram similar to Fig 4\u160?, which could have increased readability of the figure.\par}
{\pard \ql \f0 \sa180 \li0 \fi0 \b \fs36 Conclusions\par}
{\pard \ql \f0 \sa180 \li0 \fi0 As a graduate student this was an opportunity to review a paper for its technical content and then critique it. The process was rigorous involving multiple reading, creating notes and then assimilating the notes into a report, writing the report with multiple rounds of proof-reading. The learning from this exercise has been positive. This experience would be useful while I write my master\u8217's thesis.\par}
}
